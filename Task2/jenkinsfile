#!groovy
pipeline {
	agent {  label 'node1' }
	tools {
		jdk 'openjdk-11'
		maven 'my-maven'
	}
	environment {
		BUILDTIME = "${sh(script:'date "+%Y-%m-%d %H:%M:%S"', returnStdout: true).trim()}"
		VERSION = "1.0-SNAPSHOT"
	}
	stages { 
		// Build Name
		stage("Set Build Name") {
			steps {
				buildName "${env.BUILDTIME}_build#${env.BUILD_NUMBER}_${env.JOB_NAME}_${env.VERSION}"
			}			
		}
		// Maven
		stage("Maven package") {
			steps {
				withSonarQubeEnv('my-sonar') {
					sh 'mvn clean package -Dcheckstyle.skip'
				}	
			}			
		}
		// Sonar
		stage("Sonar analysis") {
			environment {
				scanner_name = tool 'my-sonar'
				project_name = "petclinic"
			}
			steps {
				withSonarQubeEnv('my-sonar') {
					sh """${scanner_name}/bin/sonar-scanner \
					-Dsonar.projectKey=$project_name \
					-Dsonar.java.binaries=./target/classes \
					-Dsonar.sources=."""
				}	
			}			
		}
		stage("Sonar Quality Gate") {
			steps {
				timeout(time: 2, unit: 'MINUTES') {
					waitForQualityGate abortPipeline: true
				}
			}
		}
		// Artifactory
		stage('Artifactory configuration') {
			steps {
				rtServer (
					id: "my-artifactory",
					url: "http://34.107.78.31:8081/artifactory",
					credentialsId: "artifactory"
				)
				rtMavenDeployer (
					id: "my-maven",
					serverId: "my-artifactory",
					releaseRepo: "PetClinicRep",
					snapshotRepo: "PetClinicRep",
					includePatterns: ["*.jar", "*.war"]
				)
				rtMavenRun (
					goals: "clean install -Dcheckstyle.skip -Dmaven.test.skip=true",
					pom: "pom.xml",
					deployerId: "my-maven"
				)			
			} 				  				  
		}
		stage('Publish to Artifactory') {
			steps {
				rtPublishBuildInfo(
					serverId: "my-artifactory"
				)
			}
		}
	}
	post {
		always {
			// Email notification
			emailext (
				from: "jenkins.auto.mail.notification@gmail.com",
				to: "sasha7692@gmail.com",
				subject: "Job '${env.JOB_NAME}' '${env.BUILD_NUMBER}'", 
				body: """Build status is '${currentBuild.currentResult}'.\nDetails by links:\n1) Jenkins log: '${env.BUILD_URL}consoleText';\n2) BlueOcean log: '${env.RUN_DISPLAY_URL}'"""
			)	 
		}
	}	
}
